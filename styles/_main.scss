main {
  @include flexCenter(column);
  position: relative;
  padding: 30px;
  background-color: $backgroundColor;
  color: $textColor;
  border-radius: $borderRadiusMedium;
  border: 2px solid $colorOne;
  gap: 20px;
  opacity: 0;
  visibility: hidden;
  animation: fadeIn 0.3s forwards;
  h1 {
    font-size: 1.3rem;
  }
  .findCity {
    display: none;
    width: 100%;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    #cityInp {
      @include buttonAndInput($colorOne);
      &:hover {
        background-color: $backgroundColorHover;
      }
      &:focus {
        outline: none;
        border-color: $colorTwo;
      }
    }
    #getLocation {
      @include buttonAndInput($colorOne);
      background-color: $colorTwo;
      &:hover {
        background-color: $colorTwoDarker;
      }
    }
    #or {
      position: relative;
      &:before {
        content: "";
        position: absolute;
        width: 80px;
        height: 2px;
        background-color: $colorOne;
        top: 50%;
        left: 120%;
      }
      &::after {
        content: "";
        position: absolute;
        width: 80px;
        height: 2px;
        background-color: $colorOne;
        top: 50%;
        right: 120%;
      }
    }
  }

  .wraper {
    display: none;
    position: relative;
    gap: 10px;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-column-gap: 15px;
    grid-row-gap: 15px;
    .back {
      //  @include cardStyle;
      margin-left: auto;
      grid-area: 1 / 2 / 2 / 3;
      #goBack {
        background-color: $textColorTwo;
        border-radius: $borderRadiusMinimum;
        padding: 5px 10px;
        overflow: hidden;
      }
    }
    .welcome {
      grid-area: 1 / 1 / 2 / 2;
      #welcomeTitle {
        color: $textColorTwo;
        font-size: 25px;
      }
    }
    #temp {
      @include cardStyle;
      position: relative;
      height: min-content;
      background-color: $colorOne;
      color: $textColor;
      transition: all 0.3s;
      text-wrap: nowrap;
      &:hover {
        background-color: $colorOneDarker;
      }
      #temperatureDiv {
        .temperatureSpan {
          display: flex;
          width: 100%;
          gap: 15px;
          justify-content: space-between;
          .mainTemp {
            width: 100%;
            gap: 10px;
            font-size: 20px;
            @include flexCenter(column);
          }
          .skill {
            position: relative;
            width: 110px;
            aspect-ratio: 1;
            transform: translateY(4px);
            circle {
              fill: none;
              stroke: url(#GradientColor);
              stroke-width: 20px;
              stroke-dasharray: 472;
              stroke-dashoffset: 472;
              animation: animacja 2s forwards;
            }
            svg {
              position: absolute;
              top: 0;
              left: 0;
              transform: translate(-18.5%, -19%) scale(0.67);
            }
            .outer {
              //   background-color: cornflowerblue;
              width: 100px;
              aspect-ratio: 1;
              border-radius: 50%;
              //  border: 1px solid black;
              padding: 10px;
              box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;

              .inner {
                //    background-color: cornflowerblue;
                width: 80px;
                aspect-ratio: 1;
                border-radius: 50%;
                //     border: 1px solid black;
                box-shadow: inset rgba(0, 0, 0, 0.1) 0px 4px 12px;
                @include flexCenter(column);
                #tempNumb {
                  font-size: 20px;
                }
              }
            }
          }
        }
      }
    }
    .minAndMax {
      display: flex;
      position: relative;
      height: min-content;
      text-wrap: nowrap;
      background-color: $colorThree;
      color: $textColorTwo;
      @include cardStyle;
      transition: all 0.3s;
      &:hover {
        background-color: $cardHover;
      }
      .minMaxLeftRight {
        display: flex;
        width: 100%;
        gap: 15px;
        justify-content: space-between;
        .skill {
          position: relative;
          width: 110px;
          aspect-ratio: 1;
          transform: translateY(4px);
          circle {
            fill: none;
            stroke: url(#GradientColor);
            stroke-width: 20px;
            stroke-dasharray: 472;
            stroke-dashoffset: 472;
            animation: animacja 2s forwards;
          }
          svg {
            position: absolute;
            top: 0;
            left: 0;
            transform: translate(-18.5%, -19%) scale(0.67);
          }
          .outer {
            width: 100px;
            aspect-ratio: 1;
            border-radius: 50%;
            padding: 10px;
            box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
            .inner {
              width: 80px;
              aspect-ratio: 1;
              border-radius: 50%;
              box-shadow: inset rgba(0, 0, 0, 0.1) 0px 4px 12px;
              @include flexCenter(column);
              #tempNumb {
                font-size: 20px;
              }
            }
          }
        }
        .leftMinMax {
          width: 100%;
          gap: 10px;
          font-size: 20px;
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: column;

          .minMaxSpan {
            display: flex;
            width: 100%;
            justify-content: space-between;
          }
        }
      }
    }
    .compas {
      @include cardStyle;
      grid-area: 3 / 1 / 4 / 3;
      display: flex;
      justify-content: space-between;
      position: relative;
      gap: 5px;
      background-color: $colorThree;
      color: $textColorTwo;
      transition: all 0.3s;
      &:hover {
        background-color: $cardHover;
      }
      .compasCircle {
        position: relative;
        height: 100%;
        aspect-ratio: 1;
        background: $textColorTwo;
        border: 1px solid black;
        border-radius: 50%;
        margin-right: 13px;
        .arrow {
          position: absolute;
          width: 2px;
          height: 40%;
          background-color: black;
          transform-origin: bottom;
          top: 10%;
          left: 50%;
          animation: 2s compasDeg forwards;
        }
      }
    }
    .forecast {
      @include cardStyle;
      grid-area: 1 / 3 / 4 / 4;
      background-color: $colorTwo;
      color: $textColor;
      transition: all 0.3s;
      &:hover {
        background-color: $colorTwoDarker;
      }
      .weatherNow {
        @include flexCenter(column);
        margin-bottom: 20px;
        #weatherDesciption {
        }
        #weatherImg {
          width: 100px;
        }
      }
      .futureWeather {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        height: 70%;
      }
    }
  }
}
.between {
  display: flex;
  align-items: center;
}
.wraper.active {
  display: grid;
}
.findCity.active {
  display: flex;
}

#weatherImg {
  width: 64px;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}
.center {
  @include flexCenter(column);
  background-color: $colorTwoDarker;
  border-radius: $borderRadiusSmall;
  width: 114px;
  aspect-ratio: 1;
  display: grid;
  justify-self: center;
  align-self: center;
}
#weatherDesciptionOne,
#weatherDesciptionTwo,
#weatherDesciptionThree,
#weatherDesciptionFour {
  margin: 0 auto;
  padding-bottom: 20px;
}
